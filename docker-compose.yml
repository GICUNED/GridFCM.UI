# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
name: "gridfcm"

# https://hub.docker.com/_/traefik
x-traefik-image: &traefik-image "docker.io/traefik:2.10"
# https://repo.stratebi.com
x-shiny-server-image: &shiny-server-image "repo.stratebi.com/stratebi/shiny-server:v1.5.20.1002-15"
# https://quay.io/repository/keycloak/keycloak
x-keycloak-image: &keycloak-image "quay.io/keycloak/keycloak:21.1"
# https://hub.docker.com/_/postgres
x-postgres-image: &postgres-image "docker.io/postgres:15-bookworm"

services:

  traefik:
    image: *traefik-image
    restart: "on-failure:10"
    container_name: "gridfcm-traefik"
    hostname: "traefik"
    networks:
      - "gridfcm"
    ports:
      - "80:80/tcp" # HTTP.
      - "443:443/tcp" # HTTPS.
      - "443:443/udp" # HTTPS (QUIC).
      - "127.0.0.1:5433:5432/tcp" # PostgreSQL.
    volumes:
      - "./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./config/traefik/dynamic/:/etc/traefik/dynamic/:ro"
      - "./config/traefik/certs/server/:/etc/traefik/certs/:ro"
      - "traefik-acme:/etc/traefik/acme/"
    environment:
      TRAEFIK_TLS_RESOLVER: "${TRAEFIK_TLS_RESOLVER:-}"
      TRAEFIK_TLS_KEY: "${TRAEFIK_TLS_KEY:-}"
      TRAEFIK_TLS_CERT: "${TRAEFIK_TLS_CERT:-}"
      TRAEFIK_MTLS_CERTS: "${TRAEFIK_MTLS_CERTS:-}"
      DOMAIN: "${DOMAIN:?}"
      CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN:-}"
      CF_ZONE_API_TOKEN: "${CF_ZONE_API_TOKEN:-}"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

  shiny-server:
    image: *shiny-server-image
    restart: "on-failure:3"
    container_name: "gridfcm-shiny-server"
    hostname: "shiny-server"
    networks:
      - "gridfcm"
    volumes:
      - "./DB/:/srv/shiny-server/DB/:ro"
      - "./R/:/srv/shiny-server/R/:ro"
      - "./Servers/:/srv/shiny-server/Servers/:ro"
      - "./Traductions/:/srv/shiny-server/Traductions/:ro"
      - "./UI/:/srv/shiny-server/UI/:ro"
      - "./UI/plantillas:/srv/shiny-server/UI/plantillas/" 
      - "./www/:/srv/shiny-server/www/:ro"
      - "./DESCRIPTION:/srv/shiny-server/DESCRIPTION:ro"
      - "./app.R:/srv/shiny-server/app.R:ro"
      - "./global.R:/srv/shiny-server/global.R:ro"
      - "r-data:/data/"
    environment:
      SHINY_DEPLOY_SAMPLE_APPS: "${SHINY_DEPLOY_SAMPLE_APPS:-true}"
      DB_HOST: "${DB_HOST:-postgres}"
      DB_PORT: "${DB_PORT:-5432}"
      DB_NAME: "${DB_NAME:-gridfcm}"
      DB_USER: "${DB_USER:-gridfcm}"
      DB_PASSWORD: "${DB_PASSWORD:?}"
      KEYCLOAK_CLIENT_SECRET: "${KEYCLOAK_CLIENT_SECRET:?}"
    depends_on:
      postgres:
        condition: "service_healthy"
  
  keycloak:
    image: *keycloak-image
    restart: "on-failure:3"
    container_name: "gridfcm-keycloak"
    hostname: "keycloak"
    networks:
      - "gridfcm"
    volumes:
      - { type: "bind", source: "./config/keycloak/realm.json", target: "/opt/keycloak/data/import/realm.json", read_only: true }
    environment:
      DOMAIN_PRIMARY: "${DOMAIN:?}"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_HOST: "0.0.0.0"
      KC_HTTP_PORT: "7070"
      KC_HTTP_RELATIVE_PATH: "/keycloak"
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY: "edge"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_DB_USERNAME: "keycloak"
      KC_DB_PASSWORD: "${KEYCLOAK_POSTGRES_PASSWORD:?}"
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD:?}"
    command: ["start-dev", "--import-realm"]
    healthcheck:
      test: ["CMD", "bash", "-euc", ">/dev/tcp/127.0.0.1/7070"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2
    depends_on:
      postgres:
        condition: "service_healthy"

  postgres:
    image: *postgres-image
    restart: "on-failure:3"
    container_name: "gridfcm-postgres"
    hostname: "postgres"
    networks:
      - "gridfcm"
    volumes:
      - "./config/postgres/initdb.d/:/docker-entrypoint-initdb.d/:ro"
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_DB: "${DB_NAME:-gridfcm}"
      POSTGRES_USER: "${DB_USER:-gridfcm}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-password}"
      KEYCLOAK_POSTGRES_PASSWORD: "${KEYCLOAK_POSTGRES_PASSWORD:?}"
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -q -d "$${POSTGRES_DB:?}" -U "$${POSTGRES_USER:?}"']
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

volumes:

  traefik-acme:
    name: "gridfcm-traefik-acme"

  r-data:
    name: "gridfcm-r-data"

  postgres-data:
    name: "gridfcm-postgres-data"

networks:

  gridfcm:
    name: "gridfcm"
    driver: "bridge"
    internal: false
