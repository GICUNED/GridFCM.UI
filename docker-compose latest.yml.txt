version: "3.9"
name: "shiny"

x-traefik-image: &traefik-image "docker.io/traefik:2.10"

x-shiny-image: &shiny-image "repo.stratebi.com/stratebi/shiny-server:v1.5.20.1002-7"

x-postgres-image: &postgres-image "docker.io/postgres:15"

x-keycloak-image: &keycloak-image "quay.io/keycloak/keycloak:21.1.1"

services:
  shiny-traefik:
    image: *traefik-image
    restart: "on-failure:10"
    container_name: "shiny-traefik"
    hostname: "traefik"
    networks:
      shiny-public:
        aliases:
          - "shiny-public"
      shiny-private:
        aliases:
          - "shiny-private"
          - "${DOMAIN:?}"
    ports:
      - "80:80/tcp" # HTTP.
      - "443:443/tcp" # HTTPS.
      - "443:443/udp" # HTTPS (QUIC).
      - "127.0.0.1:5432:5432/tcp" # PostgreSQL.
      - "127.0.0.1:8080:8080/tcp" # Traefik.
    volumes:
      - "./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./config/traefik/dynamic/:/etc/traefik/dynamic/:ro"
      - "./config/traefik/certs/server/:/etc/traefik/certs/:ro"
      - "traefik-acme:/etc/traefik/acme/"
    environment:
      DOMAIN: "${DOMAIN:?}"
      TRAEFIK_API_BASIC_AUTH: "${TRAEFIK_API_BASIC_AUTH:-}"
      TRAEFIK_TLS_RESOLVER: "${TRAEFIK_TLS_RESOLVER:-}"
      TRAEFIK_TLS_KEY: "${TRAEFIK_TLS_KEY:-}"
      TRAEFIK_TLS_CERT: "${TRAEFIK_TLS_CERT:-}"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

  shiny-server:
    image: *shiny-image
    restart: "on-failure:3"
    container_name: "shiny-server"
    networks:
      - "shiny-private"
    volumes:
      - "./R/:/srv/shiny-server/R/:ro"
      - "./Servers/:/srv/shiny-server/Servers/:ro"
      - "./UI/:/srv/shiny-server/UI/:ro"
      - "./www/:/srv/shiny-server/www/:ro"
      - "./app.R:/srv/shiny-server/app.R:ro"
      - "./global.R:/srv/shiny-server/global.R:ro"
  
  shiny-postgres:
    image: *postgres-image
    restart: "on-failure:3"
    container_name: "shiny-postgres"
    networks:
      - "shiny-private"
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-keycloak}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
      POSTGRES_DB: "${POSTGRES_DB:-keycloak}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:?}"]
      interval: "10s"
      timeout: "5s"
      retries: 5

  shiny-keycloak:
      image: *keycloak-image
      restart: "on-failure:3"
      container_name: "shiny-keycloak"
      networks:
        - "shiny-private"
    ##volumes:
        ##- "./realm.json:/opt/keycloak/data/import/realm.json:ro"
      environment:
        KEYCLOAK_EXTERNAL_URL: "https://${DOMAIN:?}/keycloak"
        KC_HTTP_ENABLED: "true"
        KC_HTTP_HOST: "0.0.0.0"
        KC_HTTP_PORT: "8080"
        KC_HTTP_RELATIVE_PATH: "/keycloak"
        KC_HOSTNAME_STRICT: "false"
        KC_PROXY: "edge"
        KC_DB: "postgres"
        KC_DB_URL: "jdbc:postgresql://shiny-postgres/keycloak"
        KC_DB_USERNAME: "${KC_DB_USERNAME:?}"
        KC_DB_PASSWORD: "${KC_DB_PASSWORD:?}"
        KEYCLOAK_ADMIN: "${KC_ADMIN:-admin}"
        KEYCLOAK_ADMIN_PASSWORD: "${KC_ADMIN_PASSWORD:?}"
      command: "start"
      depends_on:
        shiny-postgres:
          condition: "service_healthy"

networks:

  shiny-public:
    name: "shiny-public"
    internal: false

  shiny-private:
    name: "shiny-private"
    internal: true


volumes:

  postgres-data:

  traefik-acme:

